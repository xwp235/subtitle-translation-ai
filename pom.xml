<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gptai.translation</groupId>
    <artifactId>subtitle-translation-ai</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>subtitle-translation-ai</name>

    <modules>
        <module>common</module>
        <module>platform</module>
    </modules>

    <profiles>
        <profile>
            <id>prod</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>prod</env>
            </properties>
        </profile>
    </profiles>

    <properties>
        <revision>1.0.0</revision>
        <spring-boot.version>3.4.3</spring-boot.version>
        <dotenv-java.version>3.1.0</dotenv-java.version>
        <juniversalchardet.version>2.5.0</juniversalchardet.version>
        <bucket4j.version>8.14.0</bucket4j.version>
        <datasource-proxy-spring-boot-starter.version>1.10.0</datasource-proxy-spring-boot-starter.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-text.version>1.13.0</commons-text.version>
        <commons-io.version>2.18.0</commons-io.version>
        <uap-java.version>1.6.1</uap-java.version>
        <otp-java.version>2.1.0</otp-java.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <async-tool.version>1.0.1</async-tool.version>
        <embedded-redis.version>0.7.3</embedded-redis.version>
        <owasp-java-encoder.version>1.3.1</owasp-java-encoder.version>
        <redisson-spring-boot-starter.version>3.44.0</redisson-spring-boot-starter.version>
        <poi.version>5.4.0</poi.version>
        <logstash-logback-encoder.version>8.0</logstash-logback-encoder.version>
        <esapi.version>2.6.0.0</esapi.version>
        <jte.version>3.1.16</jte.version>
        <json-path.version>2.9.0</json-path.version>
        <commons-fileupload2-jakarta-servlet6.version>2.0.0-M2</commons-fileupload2-jakarta-servlet6.version>
        <openai-java.version>0.30.0</openai-java.version>
        
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>

        <java.version>21</java.version>
        <skipTests>true</skipTests>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- https://github.com/cdimascio/dotenv-java -->
            <dependency>
                <groupId>io.github.cdimascio</groupId>
                <artifactId>dotenv-java</artifactId>
                <version>${dotenv-java.version}</version>
            </dependency>

            <!--检测文件编码工具库 https://github.com/albfernandez/juniversalchardet -->
            <dependency>
                <groupId>com.github.albfernandez</groupId>
                <artifactId>juniversalchardet</artifactId>
                <version>${juniversalchardet.version}</version>
            </dependency>

            <!--https://github.com/bucket4j/bucket4j -->
            <dependency>
                <groupId>com.bucket4j</groupId>
                <artifactId>bucket4j_jdk21-core</artifactId>
                <version>${bucket4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
            <!-- https://github.com/gavlyukovskiy/spring-boot-data-source-decorator -->
            <dependency>
                <groupId>com.github.gavlyukovskiy</groupId>
                <artifactId>datasource-proxy-spring-boot-starter</artifactId>
                <version>${datasource-proxy-spring-boot-starter.version}</version>
            </dependency>
            <!-- https://github.com/apache/commons-collections -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <!-- https://github.com/apache/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!-- https://github.com/apache/commons-text -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <!-- https://owasp.org/www-project-java-encoder -->
            <dependency>
                <groupId>org.owasp.encoder</groupId>
                <artifactId>encoder</artifactId>
                <version>${owasp-java-encoder.version}</version>
            </dependency>
            <!-- https://owasp.org/www-project-enterprise-security-api -->
            <dependency>
                <groupId>org.owasp.esapi</groupId>
                <artifactId>esapi</artifactId>
                <version>${esapi.version}</version>
            </dependency>
            <!-- https://github.com/ua-parser/uap-java -->
            <dependency>
                <groupId>com.github.ua-parser</groupId>
                <artifactId>uap-java</artifactId>
                <version>${uap-java.version}</version>
            </dependency>

            <!-- https://github.com/BastiaanJansen/otp-java -->
            <dependency>
                <groupId>com.github.bastiaanjansen</groupId>
                <artifactId>otp-java</artifactId>
                <version>${otp-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- Redisson 依赖 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson-spring-boot-starter.version}</version>
            </dependency>
            <!-- 嵌入式 Redis 依赖，集成测试时需要 -->
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis.version}</version>
            </dependency>

            <!-- https://poi.apache.org/apidocs/5.0/ -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!--https://github.com/tlcsdm/tlcsdm-asyncTool -->
            <dependency>
                <groupId>com.tlcsdm</groupId>
                <artifactId>tlcsdm-asyncTool</artifactId>
                <version>${async-tool.version}</version>
            </dependency>

            <!-- https://github.com/logfellow/logstash-logback-encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
                <!-- Use runtime scope if the project does not have any compile-time usage of logstash-logback-encoder,
                     such as usage of StructuredArguments/Markers or implementations such as
                     JsonProvider, AppenderListener, JsonFactoryDecorator, JsonGeneratorDecorator, etc
                <scope>runtime</scope>
                -->
            </dependency>

            <!-- https://github.com/casid/jte?tab=readme-ov-file -->
            <dependency>
                <groupId>gg.jte</groupId>
                <artifactId>jte</artifactId>
                <version>${jte.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-fileupload2-jakarta-servlet6</artifactId>
                <version>${commons-fileupload2-jakarta-servlet6.version}</version>
            </dependency>

            <!-- https://github.com/json-path/JsonPath -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.openai/openai-java -->
            <dependency>
                <groupId>com.openai</groupId>
                <artifactId>openai-java</artifactId>
                <version>${openai-java.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 统一 revision 版本 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                    </execution>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
                <!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <!-- maven-compiler-plugin 插件，解决 Lombok + MapStruct 组合 -->
                <!-- https://stackoverflow.com/questions/33483697/re-run-spring-boot-configuration-annotation-processor-to-update-generated-metada -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <parameters>true</parameters>
                        <source>21</source>
                        <target>21</target>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>gg.jte</groupId>
                    <artifactId>jte-maven-plugin</artifactId>
                    <version>${jte.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
